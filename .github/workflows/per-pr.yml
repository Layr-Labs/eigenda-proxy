name: CI # this name appears in the badge on the README

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  GO_VERSION: "1.22"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION}}
      # TODO: fix the local/ci drift... locally we use `make lint`.
      # We should probably use mise to install golangci-lint and other dependencies,
      # and then we could run make commands in CI.
      - name: golangci-lint
        uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 #6.5.2
        with:
          version: v1.61
          args: --timeout 3m

  # This checks that the flags in .env.holesky.example are valid and allow the proxy to start.
  flags:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION}}
      - name: Run flag test
        run: ${{ github.workspace }}/scripts/test-proxy-startup-with-env-vars.sh

  # This ensures that std output generated when running binary with `--help` is reflected in
  # in docs/help_out.txt
  help-output-check:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: make gen-static-help-output && git diff --exit-code

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: true
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make test-unit

  e2e-tests-local:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: true
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make test-e2e-local

  e2e-tests-testnet:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: true
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make test-e2e-testnet
        env:
          SIGNER_PRIVATE_KEY: ${{ secrets.SIGNER_PRIVATE_KEY }}
          ETHEREUM_RPC: ${{ secrets.ETHEREUM_RPC }}

  e2e-tests-preprod:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: true
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make test-e2e-preprod
        env:
          SIGNER_PRIVATE_KEY: ${{ secrets.SIGNER_PRIVATE_KEY }}
          ETHEREUM_RPC: ${{ secrets.ETHEREUM_RPC }}

  fuzz:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: true
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: go mod download
      - run: make test-fuzz

  build-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: make eigenda-proxy

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@446798f8213ac2e75931c1b0769676d927801858 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          push: false
          context: .
          tags: eigenda-proxy
      # We also test that the docker container starts up correctly.
      - name: Run container as background process
        shell: bash
        run: |
          docker run -d \
          -p 6666:6666 \
          -e EIGENDA_PROXY_ADDR=0.0.0.0 \
          -e EIGENDA_PROXY_PORT=6666 \
          -e EIGENDA_PROXY_MEMSTORE_ENABLED=true \
          eigenda-proxy
      - name: Wait for rpc to come up
        shell: bash
        run: |
          ${{ github.workspace }}/scripts/wait-for.sh
